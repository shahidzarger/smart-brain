{"version":3,"sources":["components/Logo/logo.png","components/Navigation/Navigation.js","components/Rank/Rank.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","components/Signin/Signin.js","components/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Rank","user","name","entries","Logo","options","max","height","width","alt","src","logo","ImageLinkForm","onInputChange","onDetectImage","onChange","type","FaceRecognition","imageUrl","box","position","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","loadUser","this","htmlFor","placeholder","href","React","Component","Register","onNameChange","onSubmitRegister","particlesOptions","particles","number","density","enable","value_area","initialState","input","route","joined","App","calculateFaceLocation","data","clearifyFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","err","console","log","params","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a0052f99.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.45a2f0b8.png\";","import React from 'react';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n    if (isSignedIn) {\r\n        return (\r\n            <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                <p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n            </nav>\r\n        )\r\n    } else {\r\n        return (\r\n            <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                <p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\r\n                <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\r\n            </nav>\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nconst Rank = ({user}) => {\r\n    return (\r\n        <div className='f2'>\r\n            <p>{user.name}, your current rank is...</p>\r\n            <p>{user.entries}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rank","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css';\r\nimport logo from './logo.png';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className='ma4 mt0'>\r\n            <Tilt className=\"Tilt shadow-2 br2\" options={{ max: 100 }} style={{ height: 200, width: 200 }} >\r\n                <div className=\"Tilt-inner\"> <img alt='brain' className='br3 shadow grow' style={{ height: 170, width: 170 }} src={logo} /> </div>\r\n            </Tilt>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css'\r\n\r\nconst ImageLinkForm = ({ onInputChange, onDetectImage }) => {\r\n    return (\r\n        <div>\r\n            <p className='f3'>\r\n                {'This Magic Brain will detect faces in your pictures. Give it a try!'}\r\n            </p>\r\n            <div className='center'>\r\n                <div className=' form center pa4 br4 shadow-5'>\r\n                    <input onChange={onInputChange} className='f6 w-70 pa2 center' type='text' />\r\n                    <button className='grow w-30 link f6 ph3 pv2 dib white bg-light-purple'\r\n                        onClick={onDetectImage}>Detect</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport './FaceRecognition.css'\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n\r\n    return (\r\n        <div className='center ma' >\r\n            <div style={{ position: \"relative\" }}>\r\n                <div className='mt2'>\r\n                    <img alt='' id='inputimage' src={imageUrl} width='500px' height='auto' />\r\n                </div>\r\n                <div className='bounding-box'\r\n                    style={{ top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol }} >\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FaceRecognition;\r\n\r\n","import React from 'react';\r\n\r\nclass Signin extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signInEmail: '',\r\n            signInPassword: ''\r\n        }\r\n    }\r\n    onEmailChange = (event) => {\r\n        this.setState({ signInEmail: event.target.value });\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({ signInPassword: event.target.value });\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        fetch('https://stormy-reaches-21076.herokuapp.com/signin', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: this.state.signInEmail,\r\n                password: this.state.signInPassword\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(user => {\r\n                if (user.id) {\r\n                    this.props.loadUser(user)\r\n                    this.props.onRouteChange('home')\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        const { onRouteChange } = this.props;\r\n        return (\r\n            <article className=\"br2 shadow-3 br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <form className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f4 fw6 ph0 mh0\">Sign In</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input\r\n                                    onChange={this.onEmailChange}\r\n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"email\"\r\n                                    name=\"email-address\"\r\n                                    id=\"email-address\" />\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                <input\r\n                                    onChange={this.onPasswordChange}\r\n                                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"password\" />\r\n                            </div>\r\n                            <div className=\"lh-copy mt3\">\r\n                                <input\r\n                                    onClick={this.onSubmitSignIn}\r\n                                    className=\"b w3 ph3 pv2 input-reset ba b--black bg-transparent pointer f6 dib\"\r\n                                    placeholder=\"Sign In\" />\r\n                                <a onClick={() => onRouteChange('register')} href=\"#0\" className=\"f6 link dim black db\">Register</a>\r\n                            </div>\r\n                        </fieldset>\r\n\r\n                    </form>\r\n                </main>\r\n            </article>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            name: ''\r\n        }\r\n    }\r\n\r\n    onNameChange = (event) => {\r\n        this.setState({ name: event.target.value });\r\n    }\r\n    onEmailChange = (event) => {\r\n        this.setState({ email: event.target.value });\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({ password: event.target.value });\r\n    }\r\n\r\n    onSubmitRegister = () => {\r\n        fetch('https://stormy-reaches-21076.herokuapp.com/register', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: this.state.name,\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            })\r\n        })\r\n            .then(response => response.json())\r\n            .then(user => {\r\n                if (user.id) {\r\n                    this.props.loadUser(user);\r\n                    this.props.onRouteChange('home')\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <article className=\"br2 shadow-3 br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 center\" >\r\n                <main className=\"pa4 black-80\">\r\n                    <form className=\"measure\">\r\n                        <fieldset className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f4 fw6 ph0 mh0\">Register</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                                <input\r\n                                    onChange={this.onNameChange}\r\n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    id=\"name\" />\r\n                            </div>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input\r\n                                    onChange={this.onEmailChange}\r\n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"email\"\r\n                                    name=\"email-address\"\r\n                                    id=\"email-address\" />\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                <input\r\n                                    onChange={this.onPasswordChange}\r\n                                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"password\" />\r\n                            </div>\r\n                            <div className=\"lh-copy mt3\">\r\n                                <input onClick={this.onSubmitRegister}\r\n                                    className=\"b w3 ph3 pv2 input-reset ba b--black bg-transparent pointer f6 dib\"\r\n                                    placeholder=\"Register\" />\r\n                            </div>\r\n                        </fieldset>\r\n\r\n                    </form>\r\n                </main>\r\n            </article>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Register","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport Rank from './components/Rank/Rank';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport './App.css';\n\n\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 250,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: '',\n    joined: ''\n  }\n}\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  calculateFaceLocation = (data) => {\n    const clearifyFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n\n    return {\n      leftCol: clearifyFace.left_col * width,\n      topRow: clearifyFace.top_row * height,\n      rightCol: width - (clearifyFace.right_col * width),\n      bottomRow: height - (clearifyFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({ box: box });\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value })\n  }\n\n  onDetectImage = () => {\n    this.setState({ imageUrl: this.state.input })\n    fetch('https://stormy-reaches-21076.herokuapp.com/imageurl', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        input: this.state.input\n      })\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response) {\n          fetch('https://stormy-reaches-21076.herokuapp.com/image', {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => this.setState(Object.assign(this.state.user, { entries: count })))\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err))\n\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState);\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route: route });\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    });\n  }\n\n  render() {\n    const { isSignedIn, box, route, imageUrl } = this.state;\n\n    return (\n      <div className=\"App\" >\n        <Particles className='particles'\n          params={particlesOptions} />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n\n        {route === 'home'\n          ? <div>\n            <Logo />\n            <Rank user={this.state.user} />\n            <ImageLinkForm onInputChange={this.onInputChange} onDetectImage={this.onDetectImage} />\n            <FaceRecognition box={box} imageUrl={imageUrl} />\n          </div>\n\n          : (this.state.route === 'signin' || this.state.route === 'signout'\n            ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n          )\n        }\n      </div >\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}